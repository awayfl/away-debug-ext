{"version":3,"sources":["js/lib/API.ts","js/lib/EVENT.ts","js/background.ts"],"names":[],"mappings":";AAcA,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,QAAA,WAAA,EAda,QAAA,MAAQ,CACpB,QAAS,eACT,QAAS,iBAYV,MAAa,EAMZ,YAAmB,EAAO,IAAP,KAAA,KAAA,EALT,KAAA,UAA4B,EAC5B,KAAA,MAA8B,GAC9B,KAAA,MAAmD,GACnD,KAAA,WAAqB,EAGzB,KAAA,WAAa,KAAK,WAAW,KAAK,MAGxC,QAAQ,GACH,KAAK,MACH,KAAA,KAAK,aAML,KAAA,KAHD,EAGQ,OAAO,KAAK,QAAQ,EAAO,CAAE,KAAM,KAAK,OAFxC,OAAO,QAAQ,QAAQ,CAAE,KAAM,KAAK,OAK5C,KAAA,KAAK,UAAU,YAAY,KAAK,WAAW,KAAK,OAGtD,QACM,KAAA,MAAQ,KAAK,KAAK,aAClB,KAAA,UAAO,EAGT,aACI,QAAE,KAAK,KAQf,YAAY,GAOJ,OANP,EAAK,OAAS,EAAC,EAAW,MACzB,EAAS,KAAO,EAAK,KACrB,EAAS,GAAK,EAAK,GACnB,EAAS,OAAS,EAAK,OAClB,KAAA,KAAK,YAAY,KAEhB,EAGR,WAAW,GAIJ,MAAA,OAAuB,IAAZ,EAAK,GAAmB,KAAK,MAAM,EAAK,SAAM,EAE3D,GAAC,EASE,CAEF,GADC,KAAA,MAAM,EAAK,SAAM,EAClB,EAAK,MAER,YADA,EAAS,OAAO,EAAK,OAGtB,EAAS,QAAQ,QAdb,KAAK,MAAM,EAAK,MACd,KAAA,MAAM,EAAK,MAAM,KAAK,YAAY,IAKvC,QAAQ,KAAK,4BAA6B,EAAK,GAAI,EAAK,MAY3D,OAAO,EAAc,GACf,KAAA,MAAM,GAAQ,EAGpB,QAAQ,GACF,KAAA,MAAM,QAAQ,EAId,KAAK,EAAc,EAAW,EAAU,GAlF/C,OAAA,EAAA,UAAA,OAAA,EAAA,YAmFM,IAAC,KAAK,KACH,MAAA,IAAI,MAAM,0BAMV,OAHP,EAAK,KAAO,EACZ,EAAK,GAAK,EAAK,IAAM,KAAK,aAEnB,IAAI,QAAQ,CAAC,EAAS,KACvB,KAAA,MAAM,EAAK,IAAM,CACrB,GAAI,EAAK,GACT,QAAA,EACA,OAAA,GAGE,EAAU,GACZ,WAAW,KACV,EAAO,iCACL,GAGC,KAAA,KAAK,YAAY,QAvGzB,QAAA,UAAA;;ACJC,aAVD,IAAkB,EAUjB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAVD,SAAkB,GACjB,EAAA,OAAA,SACA,EAAA,OAAA,SACA,EAAA,KAAA,OACA,EAAA,KAAA,OACA,EAAA,SAAA,MACA,EAAA,SAAA,WACA,EAAA,SAAA,WACA,EAAA,KAAA,OACA,EAAA,aAAA,eATD,CAAkB,EAAA,QAAA,QAAA,QAAA,MAAK;;ACqCvB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IArCA,MAAA,EAAA,QAAA,aACA,EAAA,QAAA,eAEM,EAAU,CACd,CAAA,EAAA,MAAM,SAAU,CAAC,eAAW,EAAW,UAAM,GAC7C,CAAA,EAAA,MAAM,SAAU,CAAC,eAAW,EAAW,UAAM,IAG/C,IAAI,EAAmB,EAEvB,EAAQ,EAAA,MAAM,SAAS,UAAY,SAAU,GACpC,OAAA,EAAQ,MACV,KAAA,EAAA,MAAM,OACV,QAAQ,IAAI,SAAU,EAAQ,gBAC9B,EAAmB,EAAQ,GAE3B,OAAO,KAAK,cAAc,EAAQ,MAAO,CACxC,KAAM,EAAQ,iBAMjB,QAAQ,MAAM,wBAAyB,IAGxC,EAAQ,EAAA,MAAM,SAAS,UAAY,SAAU,GACzC,EAAQ,OAAS,EAAA,MAAM,SACzB,EAAQ,GAAK,EACb,EAAQ,EAAA,MAAM,SAAS,KAAK,YAAY,GACxC,QAAQ,MAAM,qBAAsB,IAGrC,QAAQ,MAAM,wBAAyB,IAIxC,OAAO,QAAQ,UAAU,YAAa,IACrC,EAAQ,EAAK,MAAM,KAAO,EAEpB,MAAA,EAAY,CAAC,EAAS,KAExB,GAAA,EAAQ,QAAU,EAAQ,EAAQ,QACjC,OAAC,EAAQ,EAAQ,QAAQ,MAK5B,EAAQ,OAAS,EAAO,KAExB,EAAQ,EAAQ,QAAQ,KAAK,YAAY,QACzC,QAAQ,MAAM,mBAAoB,EAAQ,OAAQ,SAPjD,QAAQ,KAAK,8BAA+B,GAW9C,EAAQ,EAAO,MAAM,UAAU,IAIhC,EAAK,UAAU,YAAY,GAE3B,EAAK,aAAa,YAAY,KAC7B,EAAK,UAAU,eAAe","file":"background.js","sourceRoot":"..\\src","sourcesContent":["export const PAGES = {\r\n\tCONTENT: \"content-page\",\r\n\tDEVTOOL: \"devtools-page\",\r\n};\r\n\r\nexport interface IMessage {\r\n\ttarget: string;\r\n\tsender: string;\r\n\ttype: string;\r\n\terror: any;\r\n\tid: number;\r\n\tanswer?: (data: any) => void;\r\n}\r\n\r\nexport class APIServer {\r\n\tprotected _bus: chrome.runtime.Port = undefined;\r\n\tprotected _pool: {[key: string]: any} = {};\r\n\tprotected _flow: {[key: string]: (mess: IMessage) => void} = {};\r\n\tprotected _messageID: number = 0;\r\n\r\n\tconstructor(public name = '') {\r\n\t\tthis._onMessage = this._onMessage.bind(this);\r\n\t}\r\n\t\r\n\tconnect(tabId = undefined) {\r\n\t\tif (this._bus) {\r\n\t\t\tthis._bus.disconnect();\r\n\t\t}\r\n\r\n\t\tif (!tabId) {\r\n\t\t\tthis._bus = chrome.runtime.connect({ name: this.name});\r\n\t\t} else {\r\n\t\t\tthis._bus = chrome.tabs.connect(tabId, { name: this.name });\r\n\t\t}\r\n\r\n\t\tthis._bus.onMessage.addListener(this._onMessage.bind(this));\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis._bus && this._bus.disconnect();\r\n\t\tthis._bus = undefined;\r\n\t}\r\n\r\n\tget opened() {\r\n\t\treturn !!this._bus;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {IMessage} data\r\n\t * @returns {{answer: Function}}\r\n\t */\r\n\t_answerFlow(data: IMessage) {\r\n\t\tdata.answer = (_newData = {}) => {\r\n\t\t\t_newData.type = data.type;\r\n\t\t\t_newData.id = data.id;\r\n\t\t\t_newData.target = data.sender;\r\n\t\t\tthis._bus.postMessage(_newData);\r\n\t\t};\r\n\t\treturn data;\r\n\t}\r\n\r\n\t_onMessage(data: IMessage) {\r\n\r\n\t\t// console.debug(\"API\", this.name, data);\r\n\r\n\t\tconst resolver = data.id !== undefined ? this._pool[data.id] : undefined;\r\n\r\n\t\tif (!resolver) {\r\n\t\t\tif (this._flow[data.type]) {\r\n\t\t\t\tthis._flow[data.type](this._answerFlow(data));\r\n\r\n\t\t\t\t// console.debug(\"CAll flow\", data.type);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"message resolve not found\", data.id, data.type);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._pool[data.id] = undefined;\r\n\t\t\tif (data.error) {\r\n\t\t\t\tresolver.reject(data.error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tresolver.resolve(data);\r\n\t\t}\r\n\t}\r\n\r\n\tonFlow(type: string, callback: (data: IMessage & any) => void) {\r\n\t\tthis._flow[type] = callback;\r\n\t}\r\n\r\n\toffFlow(type: string) {\r\n\t\tthis._flow[type] = undefined;\r\n\t}\r\n\r\n\r\n\tasync send(type: string, data: any, timeout = 0): Promise<IMessage & any> {\r\n\t\tif (!this._bus) {\r\n\t\t\tthrow new Error(\"Connection not opened!\");\r\n\t\t}\r\n\r\n\t\tdata.type = type;\r\n\t\tdata.id = data.id || this._messageID++;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._pool[data.id] = {\r\n\t\t\t\tid: data.id,\r\n\t\t\t\tresolve,\r\n\t\t\t\treject,\r\n\t\t\t};\r\n\r\n\t\t\tif(timeout > 0) {\r\n\t\t\t\tsetTimeout(()=>{\r\n\t\t\t\t\treject(\"API call rejected by timeout\")\r\n\t\t\t\t}, timeout);\r\n\t\t\t}\r\n\r\n\t\t\tthis._bus.postMessage(data);\r\n\t\t});\r\n\t}\r\n}\r\n","export const enum EVENT {\r\n\tINJECT = 'inject',\r\n\tDETACH = 'detach',\r\n\tTEST = 'test',\r\n\tINFO = 'info',\r\n\tLOG_BLOB = 'log',\r\n\tLOG_INIT = 'log-init',\r\n\tLOG_STOP = 'log-stop',\r\n\tCALL = 'call',\r\n\tTRACK_BOUNDS = 'track-bounds'\r\n};\r\n","import { PAGES } from \"./lib/API\";\r\nimport {EVENT} from \"./lib/EVENT\";\r\n\r\nconst _BUSSES = {\r\n\t[PAGES.CONTENT]: {onMessage: undefined, port: undefined},\r\n\t[PAGES.DEVTOOL]: {onMessage: undefined, port: undefined},\r\n};\r\n\r\nlet _injectRequestId = 0;\r\n\r\n_BUSSES[PAGES.DEVTOOL].onMessage = function (message) {\r\n\tswitch (message.type) {\r\n\t\tcase EVENT.INJECT: {\r\n\t\t\tconsole.log(\"INJECT\", message.scriptToInject);\t\t\t\r\n\t\t\t_injectRequestId = message.id;\r\n\r\n\t\t\tchrome.tabs.executeScript(message.tabId, {\r\n\t\t\t\tfile: message.scriptToInject,\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.debug(\"devtool -> background\", message);\r\n};\r\n\r\n_BUSSES[PAGES.CONTENT].onMessage = function (message) {\r\n\tif(message.type === EVENT.INJECT) {\r\n\t\tmessage.id = _injectRequestId;\r\n\t\t_BUSSES[PAGES.DEVTOOL].port.postMessage(message);\r\n\t\tconsole.debug(\"content -> devtool\", message);\r\n\t}\r\n\r\n\tconsole.debug(\"content -> background\", message);\r\n};\r\n\r\n// Background page -- background.js\r\nchrome.runtime.onConnect.addListener((port) => {\r\n\t_BUSSES[port.name].port = port;\r\n\r\n\tconst onMessage = (message, sender) => {\r\n\r\n\t\tif(message.target && _BUSSES[message.target]) {\r\n\t\t\tif(!_BUSSES[message.target].port) {\r\n\t\t\t\tconsole.warn('ATTEMTS send to closed port', message);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tmessage.sender = sender.name;\r\n\t\t\t\r\n\t\t\t_BUSSES[message.target].port.postMessage(message);\r\n\t\t\tconsole.debug('proxy message to', message.target, message);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_BUSSES[sender.name].onMessage(message);\r\n\t};\r\n\r\n\t// add the listener\r\n\tport.onMessage.addListener(onMessage);\r\n\r\n\tport.onDisconnect.addListener(() => {\r\n\t\tport.onMessage.removeListener(onMessage);\r\n\t});\r\n});\r\n"]}