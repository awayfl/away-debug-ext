{"version":3,"sources":["js/lib/API.js","js/lib/EVENT.js","js/devtools.js"],"names":["PAGES","CONTENT","DEVTOOL","APIServer","constructor","name","_bus","undefined","_pool","_flow","_messageId","connect","disconnect","chrome","runtime","onMessage","addListener","_onMessage","bind","close","_answerFlow","data","answer","_newData","type","id","target","sender","postMessage","resolver","error","reject","resolve","console","warn","onFlow","callback","offFlow","send","Error","Promise","EVENT","INJECT","DETACH","TEST","INFO","LOG_BLOB","LOG_INIT","LOG_STOP","CALL","api","contex","injectionStatus","isCapture","pingTimeout","isAttached","getStatus","then","e","status","_logsCallback","serverIsDetached","clearInterval","detach","startPingout","setTimeout","_onBlobReached","blob","startCaptureLogs","limit","logType","allow","log","stopCaptureLogs","supress","debug","emit","tryConnect","tabId","devtools","inspectedWindow","scriptToInject","isDebugable","getAppInfo","directCall","method","args","result","devApi","_onPanelShow","panelContext","PANEL_API","init","_onPanelHide","panels","create","panel","onShown","onHidden"],"mappings":"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","file":"devtools.f94c442b.js","sourceRoot":"..\\src","sourcesContent":["export const PAGES = {\r\n\tCONTENT: 'content-page',\r\n\tDEVTOOL: 'devtools-page'\r\n}\r\n\r\nexport class APIServer {\r\n\tconstructor(name) {\r\n\t\tthis.name = name;\r\n\t\tthis._bus = undefined;\r\n\t\tthis._pool = {};\r\n\t\tthis._flow = {};\r\n\t\tthis._messageId = 0;\r\n\t}\r\n\r\n\tconnect() {\r\n\t\tif(this._bus) {\r\n\t\t\tthis._bus.disconnect();\r\n\t\t}\r\n\r\n\t\tthis._bus = chrome.runtime.connect({\r\n\t\t\tname: this.name,\r\n\t\t});\r\n\r\n\t\tthis._bus.onMessage.addListener(this._onMessage.bind(this));\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis._bus && this._bus.disconnect();\r\n\t\tthis._bus = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {any} data\r\n\t * @returns {{answer: Function}} \r\n\t */\r\n\t_answerFlow(data) {\r\n\t\tdata.answer = (_newData = {}) =>{\r\n\t\t\t_newData.type = data.type;\r\n\t\t\t_newData.id = data.id;\r\n\t\t\t_newData.target = data.sender;\r\n\t\t\tthis._bus.postMessage(_newData);\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\t\r\n\t_onMessage(data) {\r\n\t\tconst resolver = this._pool[data.id];\r\n\t\tthis._pool[data.id] = undefined;\r\n\r\n\t\tif (!resolver) {\r\n\t\t\tif (this._flow[data.type]) {\r\n\t\t\t\tthis._flow[data.type](this._answerFlow(data));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"message resolve not found\", data.id, data.type);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (data.error) {\r\n\t\t\t\tresolver.reject(data.error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tresolver.resolve(data);\r\n\t\t}\r\n\t}\r\n\r\n\tonFlow(type, callback) {\r\n\t\tthis._flow[type] = callback;\r\n\t}\r\n\r\n\toffFlow(type) {\r\n\t\tthis._flow[type] = false;\r\n\t}\r\n\r\n\tasync send(type, data) {\r\n\t\tif (!this._bus) {\r\n\t\t\tthrow new Error(\"Connection not opened!\");\r\n\t\t}\r\n\r\n\t\tdata.type = type;\r\n\t\tdata.id = this._messageId++;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._pool[data.id] = {\r\n\t\t\t\tid: data.id,\r\n\t\t\t\tresolve,\r\n\t\t\t\treject,\r\n\t\t\t};\r\n\r\n\t\t\tthis._bus.postMessage(data);\r\n\t\t});\r\n\t}\r\n}\r\n","export const EVENT = {\r\n\tINJECT: 'inject',\r\n\tDETACH: 'detach',\r\n\tTEST: 'test',\r\n\tINFO: 'info',\r\n\tLOG_BLOB: 'log',\r\n\tLOG_INIT: 'log-init',\r\n\tLOG_STOP: 'log-stop',\r\n\tCALL: 'call'\r\n};\r\n","//@ts-check\r\n\r\nimport { APIServer, PAGES } from \"./lib/API.js\";\r\nimport { EVENT } from \"./lib/EVENT\";\r\n\r\nconst api = new APIServer(PAGES.DEVTOOL);\r\n\r\n/**\r\n * @type {IPanelAPI}\r\n */\r\nlet contex = undefined;\r\nlet injectionStatus = false;\r\nlet isCapture = false;\r\nlet pingTimeout = undefined;\r\nlet isAttached = false;\r\n\r\nasync function getStatus() {\r\n\tif (!injectionStatus) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn api.send(EVENT.TEST, { target: PAGES.CONTENT }).then((e) => {\r\n\t\treturn e.status;\r\n\t});\r\n}\r\n\r\nlet _logsCallback = undefined;\r\n\r\nfunction serverIsDetached() {\r\n\tclearInterval(pingTimeout);\r\n\r\n\tisCapture = false;\r\n\tisAttached = false;\r\n\tcontex && contex.detach();\r\n\r\n\tconsole.warn(\"AWAY DEV server is detached!\");\r\n}\r\n\r\nfunction startPingout() {\r\n\tpingTimeout = setTimeout(() => {\r\n\t\tserverIsDetached();\r\n\t}, 1000);\r\n\r\n\tgetStatus().then((status) => {\r\n\t\tclearInterval(pingTimeout);\r\n\r\n\t\tif (!status) {\r\n\t\t\tserverIsDetached();\r\n\t\t} else {\r\n\t\t\tpingTimeout = setTimeout(() => {\r\n\t\t\t\tstartPingout();\r\n\t\t\t}, 500);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction _onBlobReached(data) {\r\n\tif (_logsCallback) {\r\n\t\t// пинаем, что не зависили!\r\n\t\tdata.answer({});\r\n\t\t_logsCallback(data.blob);\r\n\t}\r\n}\r\n\r\nfunction startCaptureLogs({ type, limit = 500000 }, callback) {\r\n\t_logsCallback = callback;\r\n\r\n\treturn api\r\n\t\t.send(EVENT.LOG_INIT, {\r\n\t\t\tlogType: type,\r\n\t\t\tlimit,\r\n\t\t\ttarget: PAGES.CONTENT,\r\n\t\t})\r\n\t\t.then(({ allow }) => {\r\n\t\t\tif (allow) {\r\n\t\t\t\tconsole.log(\"register blob flow\");\r\n\r\n\t\t\t\tapi.onFlow(EVENT.LOG_STOP, () => stopCaptureLogs(true));\r\n\t\t\t\tapi.onFlow(EVENT.LOG_BLOB, _onBlobReached);\r\n\t\t\t}\r\n\t\t\tisCapture = allow;\r\n\r\n\t\t\treturn allow;\r\n\t\t});\r\n}\r\n\r\nfunction stopCaptureLogs(supress = false) {\r\n\tif (!isCapture) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tisCapture = false;\r\n\r\n\tconsole.debug(\"DEVTOOL\", \"STOP CAPTURE\");\r\n\r\n\tapi.offFlow(EVENT.LOG_BLOB);\r\n\r\n\tif (!supress) {\r\n\t\tapi.send(EVENT.LOG_STOP, { target: PAGES.CONTENT });\r\n\t}\r\n\r\n\tcontex.emit(EVENT.LOG_STOP, {});\r\n\t_logsCallback = undefined;\r\n}\r\n\r\nasync function tryConnect() {\r\n\tapi.connect();\r\n\r\n\tconst status = await api.send(EVENT.INJECT, {\r\n\t\ttabId: chrome.devtools.inspectedWindow.tabId,\r\n\t\tscriptToInject: \"js/content.js\",\r\n\t});\r\n\r\n\tinjectionStatus = status.status;\r\n\r\n\tconst isDebugable = await getStatus();\r\n\r\n\tisAttached = status.status && isDebugable;\r\n\r\n\tif (isAttached) {\r\n\t\tstartPingout();\r\n\t}\r\n\r\n\treturn isAttached;\r\n}\r\n\r\nasync function getAppInfo() {\r\n\treturn directCall(\"getInfo\");\r\n}\r\n\r\nasync function directCall(method, args = []) {\r\n\r\n\tconsole.debug(\"CALL DIRECT\", method, args);\r\n\t\r\n\tif (!isAttached) {\r\n\t\tthrow \"DevTool not attached to page!\";\r\n\t}\r\n\r\n\treturn api\r\n\t\t.send(EVENT.CALL, { method, args, target: PAGES.CONTENT })\r\n\t\t.then((e) => {\r\n\t\t\tif (e.error) {\r\n\t\t\t\tthrow e.error;\r\n\t\t\t}\r\n\r\n\t\t\treturn e.result;\r\n\t\t});\r\n}\r\n\r\n/**\r\n * @type {IDevToolAPI}\r\n */\r\nconst devApi = {\r\n\tgetStatus,\r\n\tstartCaptureLogs,\r\n\tstopCaptureLogs,\r\n\ttryConnect,\r\n\tgetAppInfo,\r\n\tdirectCall,\r\n};\r\n\r\nfunction _onPanelShow(panelContext) {\r\n\tsetTimeout(() => {\r\n\t\tcontex = panelContext.PANEL_API;\r\n\r\n\t\ttryConnect().then((status) => {\r\n\t\t\tcontex.init(devApi);\r\n\t\t});\r\n\t}, 100);\r\n}\r\n\r\nfunction _onPanelHide(panelContext) {\r\n\tcontex = undefined;\r\n\tapi.send(EVENT.DETACH, { target: PAGES.CONTENT });\r\n\tapi.close();\r\n}\r\n\r\nchrome.devtools.panels.create(\r\n\t\"AwayFL\",\r\n\t\"gfx/icon16.png\",\r\n\t\"panel.html\",\r\n\t(panel) => {\r\n\t\tpanel.onShown.addListener(_onPanelShow);\r\n\t\tpanel.onHidden.addListener(_onPanelHide);\r\n\t}\r\n);\r\n"]}